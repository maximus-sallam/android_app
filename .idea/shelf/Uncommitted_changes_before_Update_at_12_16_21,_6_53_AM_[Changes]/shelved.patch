Index: buildozer.spec
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[app]\n\n# (str) Title of your application\ntitle = Number Base Converter\n\n# (str) Package name\npackage.name = baseConverter\n\n# (str) Package domain (needed for android/ios packaging)\npackage.domain = org.test\n\n# (str) Source code where the main.py live\nsource.dir = .\n\n# (list) Source files to include (let empty to include all the files)\nsource.include_exts = py,png,jpg,kv,atlas\n\n# (list) List of inclusions using pattern matching\n#source.include_patterns = assets/*,images/*.png\n\n# (list) Source files to exclude (let empty to not exclude anything)\n#source.exclude_exts = spec\n\n# (list) List of directory to exclude (let empty to not exclude anything)\n#source.exclude_dirs = tests, bin\n\n# (list) List of exclusions using pattern matching\n#source.exclude_patterns = license,images/*/*.jpg\n\n# (str) Application versioning (method 1)\nversion = 0.1\n\n# (str) Application versioning (method 2)\n# version.regex = __version__ = ['\"](.*)['\"]\n# version.filename = %(source.dir)s/main.py\n\n# (list) Application requirements\n# comma separated e.g. requirements = sqlite3,kivy\nrequirements = python3,kivy==2.0.0,kivymd==0.104.2,pillow\n\n# (str) Custom source folders for requirements\n# Sets custom source for any requirements with recipes\n# requirements.source.kivy = ../../kivy\n\n# (list) Garden requirements\n#garden_requirements =\n\n# (str) Presplash of the application\n#presplash.filename = %(source.dir)s/data/presplash.png\n\n# (str) Icon of the application\n#icon.filename = %(source.dir)s/data/icon.png\n\n# (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)\norientation = portrait\n\n# (list) List of service to declare\n#services = NAME:ENTRYPOINT_TO_PY,NAME2:ENTRYPOINT2_TO_PY\n\n#\n# OSX Specific\n#\n\n#\n# author = Â© Copyright Info\n\n# change the major version of python used by the app\nosx.python_version = 3\n\n# Kivy version to use\nosx.kivy_version = 1.9.1\n\n#\n# Android specific\n#\n\n# (bool) Indicate if the application should be fullscreen or not\nfullscreen = 0\n\n# (string) Presplash background color (for new android toolchain)\n# Supported formats are: #RRGGBB #AARRGGBB or one of the following names:\n# red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray,\n# darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy,\n# olive, purple, silver, teal.\n#android.presplash_color = #FFFFFF\n\n# (list) Permissions\n#android.permissions = INTERNET\n\n# (int) Target Android API, should be as high as possible.\n#android.api = 27\n\n# (int) Minimum API your APK will support.\n#android.minapi = 21\n\n# (int) Android SDK version to use\n#android.sdk = 20\n\n# (str) Android NDK version to use\n#android.ndk = 19b\n\n# (int) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi.\n#android.ndk_api = 21\n\n# (bool) Use --private data storage (True) or --dir public storage (False)\n#android.private_storage = True\n\n# (str) Android NDK directory (if empty, it will be automatically downloaded.)\n#android.ndk_path =\n\n# (str) Android SDK directory (if empty, it will be automatically downloaded.)\n#android.sdk_path =\n\n# (str) ANT directory (if empty, it will be automatically downloaded.)\n#android.ant_path =\n\n# (bool) If True, then skip trying to update the Android sdk\n# This can be useful to avoid excess Internet downloads or save time\n# when an update is due and you just want to test/build your package\n# android.skip_update = False\n\n# (bool) If True, then automatically accept SDK license\n# agreements. This is intended for automation only. If set to False,\n# the default, you will be shown the license when first running\n# buildozer.\n# android.accept_sdk_license = False\n\n# (str) Android entry point, default is ok for Kivy-based app\n#android.entrypoint = org.renpy.android.PythonActivity\n\n# (str) Android app theme, default is ok for Kivy-based app\n# android.apptheme = \"@android:style/Theme.NoTitleBar\"\n\n# (list) Pattern to whitelist for the whole project\n#android.whitelist =\n\n# (str) Path to a custom whitelist file\n#android.whitelist_src =\n\n# (str) Path to a custom blacklist file\n#android.blacklist_src =\n\n# (list) List of Java .jar files to add to the libs so that pyjnius can access\n# their classes. Don't add jars that you do not need, since extra jars can slow\n# down the build process. Allows wildcards matching, for example:\n# OUYA-ODK/libs/*.jar\n#android.add_jars = foo.jar,bar.jar,path/to/more/*.jar\n\n# (list) List of Java files to add to the android project (can be java or a\n# directory containing the files)\n#android.add_src =\n\n# (list) Android AAR archives to add (currently works only with sdl2_gradle\n# bootstrap)\n#android.add_aars =\n\n# (list) Gradle dependencies to add (currently works only with sdl2_gradle\n# bootstrap)\n#android.gradle_dependencies =\n\n# (list) add java compile options\n# this can for example be necessary when importing certain java libraries using the 'android.gradle_dependencies' option\n# see https://developer.android.com/studio/write/java8-support for further information\n# android.add_compile_options = \"sourceCompatibility = 1.8\", \"targetCompatibility = 1.8\"\n\n# (list) Gradle repositories to add {can be necessary for some android.gradle_dependencies}\n# please enclose in double quotes \n# e.g. android.gradle_repositories = \"maven { url 'https://kotlin.bintray.com/ktor' }\"\n#android.add_gradle_repositories =\n\n# (list) packaging options to add \n# see https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.PackagingOptions.html\n# can be necessary to solve conflicts in gradle_dependencies\n# please enclose in double quotes \n# e.g. android.add_packaging_options = \"exclude 'META-INF/common.kotlin_module'\", \"exclude 'META-INF/*.kotlin_module'\"\n#android.add_gradle_repositories =\n\n# (list) Java classes to add as activities to the manifest.\n#android.add_activities = com.example.ExampleActivity\n\n# (str) OUYA Console category. Should be one of GAME or APP\n# If you leave this blank, OUYA support will not be enabled\n#android.ouya.category = GAME\n\n# (str) Filename of OUYA Console icon. It must be a 732x412 png image.\n#android.ouya.icon.filename = %(source.dir)s/data/ouya_icon.png\n\n# (str) XML file to include as an intent filters in <activity> tag\n#android.manifest.intent_filters =\n\n# (str) launchMode to set for the main activity\n#android.manifest.launch_mode = standard\n\n# (list) Android additional libraries to copy into libs/armeabi\n#android.add_libs_armeabi = libs/android/*.so\n#android.add_libs_armeabi_v7a = libs/android-v7/*.so\n#android.add_libs_arm64_v8a = libs/android-v8/*.so\n#android.add_libs_x86 = libs/android-x86/*.so\n#android.add_libs_mips = libs/android-mips/*.so\n\n# (bool) Indicate whether the screen should stay on\n# Don't forget to add the WAKE_LOCK permission if you set this to True\n#android.wakelock = False\n\n# (list) Android application meta-data to set (key=value format)\n#android.meta_data =\n\n# (list) Android library project to add (will be added in the\n# project.properties automatically.)\n#android.library_references =\n\n# (list) Android shared libraries which will be added to AndroidManifest.xml using <uses-library> tag\n#android.uses_library =\n\n# (str) Android logcat filters to use\n#android.logcat_filters = *:S python:D\n\n# (bool) Copy library instead of making a libpymodules.so\n#android.copy_libs = 1\n\n# (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86, x86_64\nandroid.arch = armeabi-v7a\n\n# (int) overrides automatic versionCode computation (used in build.gradle)\n# this is not the same as app version and should only be edited if you know what you're doing\n# android.numeric_version = 1\n\n#\n# Python for android (p4a) specific\n#\n\n# (str) python-for-android fork to use, defaults to upstream (kivy)\n#p4a.fork = kivy\n\n# (str) python-for-android branch to use, defaults to master\n#p4a.branch = master\n\n# (str) python-for-android git clone directory (if empty, it will be automatically cloned from github)\n#p4a.source_dir =\n\n# (str) The directory in which python-for-android should look for your own build recipes (if any)\n#p4a.local_recipes =\n\n# (str) Filename to the hook for p4a\n#p4a.hook =\n\n# (str) Bootstrap to use for android builds\n# p4a.bootstrap = sdl2\n\n# (int) port number to specify an explicit --port= p4a argument (eg for bootstrap flask)\n#p4a.port =\n\n\n#\n# iOS specific\n#\n\n# (str) Path to a custom kivy-ios folder\n#ios.kivy_ios_dir = ../kivy-ios\n# Alternately, specify the URL and branch of a git checkout:\nios.kivy_ios_url = https://github.com/kivy/kivy-ios\nios.kivy_ios_branch = master\n\n# Another platform dependency: ios-deploy\n# Uncomment to use a custom checkout\n#ios.ios_deploy_dir = ../ios_deploy\n# Or specify URL and branch\nios.ios_deploy_url = https://github.com/phonegap/ios-deploy\nios.ios_deploy_branch = 1.7.0\n\n# (str) Name of the certificate to use for signing the debug version\n# Get a list of available identities: buildozer ios list_identities\n#ios.codesign.debug = \"iPhone Developer: <lastname> <firstname> (<hexstring>)\"\n\n# (str) Name of the certificate to use for signing the release version\n#ios.codesign.release = %(ios.codesign.debug)s\n\n\n[buildozer]\n\n# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))\nlog_level = 2\n\n# (int) Display warning if buildozer is run as root (0 = False, 1 = True)\nwarn_on_root = 1\n\n# (str) Path to build artifact storage, absolute or relative to spec file\n# build_dir = ./.buildozer\n\n# (str) Path to build output (i.e. .apk, .ipa) storage\n# bin_dir = ./bin\n\n#    -----------------------------------------------------------------------------\n#    List as sections\n#\n#    You can define all the \"list\" as [section:key].\n#    Each line will be considered as a option to the list.\n#    Let's take [app] / source.exclude_patterns.\n#    Instead of doing:\n#\n#[app]\n#source.exclude_patterns = license,data/audio/*.wav,data/images/original/*\n#\n#    This can be translated into:\n#\n#[app:source.exclude_patterns]\n#license\n#data/audio/*.wav\n#data/images/original/*\n#\n\n\n#    -----------------------------------------------------------------------------\n#    Profiles\n#\n#    You can extend section / key with a profile\n#    For example, you want to deploy a demo version of your application without\n#    HD content. You could first change the title to add \"(demo)\" in the name\n#    and extend the excluded directories to remove the HD content.\n#\n#[app@demo]\n#title = My Application (demo)\n#\n#[app:source.exclude_patterns@demo]\n#images/hd/*\n#\n#    Then, invoke the command line with the \"demo\" profile:\n#\n#buildozer --profile demo android debug\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/buildozer.spec b/buildozer.spec
--- a/buildozer.spec	(revision a35a67dc924a1307d0f279a34c09794136b870d4)
+++ b/buildozer.spec	(date 1639608795325)
@@ -7,7 +7,7 @@
 package.name = baseConverter
 
 # (str) Package domain (needed for android/ios packaging)
-package.domain = org.test
+package.domain = com.maximus-sallam
 
 # (str) Source code where the main.py live
 source.dir = .
@@ -46,10 +46,10 @@
 #garden_requirements =
 
 # (str) Presplash of the application
-#presplash.filename = %(source.dir)s/data/presplash.png
+presplash.filename = splash.png
 
 # (str) Icon of the application
-#icon.filename = %(source.dir)s/data/icon.png
+icon.filename = icon-256px.png
 
 # (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)
 orientation = portrait
